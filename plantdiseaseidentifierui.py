# -*- coding: utf-8 -*-
"""PlantDiseaseIdentifierUI

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1euhwHop8bL94lC3RKPkdWALnMcRGpoLO
"""

!pip install gradio

#import necessary libraries. Gradio for the UI, transformers to load the model and torch to process the inputs and outputs
import gradio as gr
from transformers import ViTForImageClassification, ViTImageProcessor
import torch

#Define the pretrained model
model_name = "Treelar/vit-b16-plant_village"

#Load the ViT model and the image processor
model = ViTForImageClassification.from_pretrained(model_name)
image_processor = ViTImageProcessor.from_pretrained(model_name)

#The predict function takes an image input and returns the plant disease name as an output
def predict(image):

    #Convert the image into the models required format
    inputs = image_processor(images=image, return_tensors="pt")

    #Disable gradient calculation to make the process efficient
    with torch.no_grad():
      outputs = model(**inputs) #Gets the models output for the image
      logits = outputs.logits   #Output scores from the model

    #Converts the logits to a probability using ths softmax function
    probability = torch.nn.functional.softmax(logits, dim = 1)
    top_probability, top_index = probability.max(1) #Gets the highest probability with it's respective index

    #Gets the disease label from the model using the probability's index
    label = model.config.id2label[top_index.item()]

    result = f"{label}" #Result
    return result

interface = gr.Interface(fn = predict,
                         inputs = gr.Image(label = "Upload the Image"),
                         outputs = gr.Label(),
                         title = "Plant Disease Identifier",
                         description = "Once the image has been uploaded and submitted, the disease of the plant will be determined.")

interface.launch(debug=True) #Start server and launch the UI

